<?xml version="1.0" encoding="utf-8" ?>
<configuration>
  <appSettings>
    <add key="domain" value="http://wlw.smartiot.cc:20006/" />
    <add key="basepath" value="f:\pics" />
    <!--是否启用全局调试。默认为不启用-->
    <add key="NewLife.Debug" value="True" />
    <!--日志目录。默认为当前目录下的Log文件夹-->
    <!--<add key="NewLife.LogPath" value="..\..\Log\" />-->
    <!--是否启用调试，默认不启用。输出所有执行的SQL语句-->
    <!--<add key="XCode.Debug" value="True" />-->
    <!--是否输出SQL语句，默认为XCode调试开关XCode.Debug-->
    <add key="XCode.ShowSQL" value="false" />
    <!--设置SQL输出的单独目录，默认为空，SQL输出到当前日志中1-->
    <add key="XCode.SQLPath" value="SQLLog" />
    <!--是否启用缓存调试，默认不启用-->
    <!--<add key="XCode.Cache.Debug" value="true" />-->
    <!--是否启用反向工程，默认不启用。反向工程可以实现通过实体类反向更新数据库结构-->
    <add key="XCode.Negative.Enable" value="true" />
    <!--是否只检查不操作，默认不启用。启用时，仅把更新SQL写入日志-->
    <add key="XCode.Negative.CheckOnly" value="false" />
    <!--是否启用不删除字段，默认不启用。删除字段的操作过于危险，这里可以通过设为true关闭-->
    <add key="XCode.Negative.NoDelete" value="false" />
    <!--要排除的链接名和表名，多个用逗号分隔，默认空。-->
    <add key="XCode.Negative.Exclude" value="" />  
    <!--服务组件配置-->
    <!--工作线程间隔，单位：秒。不同工作线程的时间间隔用逗号或分号隔开。可以通过设置任务的时间间隔小于0来关闭指定任务-->
    <add key="XAgent.Interval" value="3" />
    <!--最大活动时间，单位：秒。超过最大活动时间都还没有响应的线程将会被重启，防止线程执行时间过长。默认0秒，表示无限-->
    <add key="XAgent.MaxActive" value="0" />
    <!--最大占用内存，单位： M。超过最大占用时，整个服务进程将会重启，以释放资源。默认0秒，表示无限-->
    <add key="XAgent.MaxMemory" value="0" />
    <!--最大总线程数，单位：个。超过最大占用时，整个服务进程将会重启，以释放资源。默认0个，表示无限-->
    <add key="XAgent.MaxThread" value="0" />
    <!--自动重启时间，单位：分。到达自动重启时间时，整个服务进程将会重启，以释放资源。默认0分，表示无限-->
    <add key="XAgent.AutoRestart" value="60" />
    <!--服务名-->
    <add key="XAgent.ServiceName" value="AhnqIot.CameraStationDataProcess" />
    <!--显示名-->
    <add key="XAgent.DisplayName" value="省农业气象物联网后台服务" />
    <!--服务描述-->
    <add key="XAgent.Description" value="实景监测点定时拍照" />
    <!--看门狗，保护其它服务，每分钟检查一次。多个服务名逗号分隔-->
    <add key="XAgent.WatchLog" value="" />
    <!--附加代理服务。任何XAgent服务程序都可以附加代理实现了IServer接口的服务，多个服务类用相同前缀的多个设置项-->
    <add key="XAgent.AttachServer.名称" value="" />
    <!--附加代理服务配置。-->
    <add key="XAgent.名称.DomainName" value="" />
    <add key="ClientSettingsProvider.ServiceUri" value="" />
  </appSettings>
  <connectionStrings>
      <add name="connName" connectionString="Data Source=wlw.smartiot.cc,4000;Initial Catalog=AWIOT5;uid=sa;pwd=*************" providerName="System.Data.SqlClient" />
    <!--<add name="JSing" connectionString="Server=wlw.smartiot.cc,4000;Database=JSing;uid=sa;pwd=*************" providerName="System.Data.SqlClient" />-->
    <!--<add name="AWIOT-WeatherStation" connectionString="Server= wlw.smartiot.cc,4000;Database=AWIOT4;uid=sa;pwd=*************" providerName="System.Data.SqlClient" />-->
    <!--<add name="AWIOT" connectionString="Server= wlw.smartiot.cc,4000;Database=AWIOT5;uid=sa;pwd=*************" providerName="System.Data.SqlClient" />-->
    <!--<add name="CAWSAnyWhereServer" connectionString="Server= wlw.smartiot.cc,4000;Database=CAWSAnyWhereServer;uid=sa;pwd=*************" providerName="System.Data.SqlClient" />-->
    <!--<add name="AWIOT-WeatherDevice" connectionString="Data Source=.\db\WeatherDevice.db;" providerName="Sqlite" />-->
    <!--农田小气候仪-->
    <!--<add name="CAWSAnyWhereServer" connectionString="Server=10.129.1.146;Database=CAWSAnyWhereServer;uid=nqreg;pwd=*************" providerName="System.Data.SqlClient" />
    <add name="JSi--><!--ng" connectionString="Server=10.129.33.24;Database=ahnyqxwlw.ahnw.gov.cn;uid=ahnyqxwlw.ahnw.gov.cn;pwd=*************" providerName="System.Data.SqlClient" />-->
    <!--<add name="AWIOT" connectionString="Server=10.129.33.24;Database=ahnyqxwlw.ahnw.gov.cn;uid=ahnyqxwlw.ahnw.gov.cn;pwd=*************" providerName="System.Data.SqlClient" />-->
    <!--<add name="AWIOT-WeatherStation" connectionString="Server=10.129.33.24;Database=xqhy_ahnyqxwlw.ahnw.gov.cn;uid=ahnyqxwlw.ahnw.gov.cn;pwd=*************" providerName="System.Data.SqlClient" />-->
  </connectionStrings>
  <startup>
    <supportedRuntime version="v4.0" sku=".NETFramework,Version=v4.5" />
  </startup>
  <system.serviceModel>
    <bindings>
      <basicHttpBinding>
        <binding name="WebServiceSoap" />
      </basicHttpBinding>
    </bindings>
    <client>
      <endpoint address="http://www.ahqx.gov.cn/weather/WebService.asmx" binding="basicHttpBinding" bindingConfiguration="WebServiceSoap" contract="AHNW.Weather.WebServiceSoap" name="WebServiceSoap" />
      <!--<endpoint address="http://192.89.161.91/weather/WebService.asmx" binding="basicHttpBinding" bindingConfiguration="WebServiceSoap" contract="AHNW.Weather.WebServiceSoap" name="WebServiceSoap" />-->
    </client>
  </system.serviceModel>
  <system.web>
    <membership defaultProvider="ClientAuthenticationMembershipProvider">
      <providers>
        <add name="ClientAuthenticationMembershipProvider" type="System.Web.ClientServices.Providers.ClientFormsAuthenticationMembershipProvider, System.Web.Extensions, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" serviceUri="" />
      </providers>
    </membership>
    <roleManager defaultProvider="ClientRoleProvider" enabled="true">
      <providers>
        <add name="ClientRoleProvider" type="System.Web.ClientServices.Providers.ClientRoleProvider, System.Web.Extensions, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" serviceUri="" cacheTimeout="86400" />
      </providers>
    </roleManager>
  </system.web>
</configuration>