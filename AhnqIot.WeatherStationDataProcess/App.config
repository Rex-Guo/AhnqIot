<?xml version="1.0" encoding="utf-8"?>
<configuration>
  <connectionStrings>
    <!--<add name="AWIOT-WeatherStation" connectionString="Server=10.129.33.24;Database=xqhy_ahnyqxwlw.ahnw.gov.cn;uid=ahnyqxwlw.ahnw.gov.cn;pwd=*************" providerName="System.Data.SqlClient" />-->
    <add name="connName" connectionString="Data Source=wlw.smartiot.cc,4000;Initial Catalog=AWIOT5;uid=sa;pwd=*************" providerName="System.Data.SqlClient"/>
    <!--农田小气候仪-->
    <!--<add name="CAWSAnyWhereServer" connectionString="Server=10.129.1.146;Database=CAWSAnyWhereServer;uid=nqreg;pwd=*************" providerName="System.Data.SqlClient" />-->
    <add name="CAWSAnyWhereServer" connectionString="Server= wlw.smartiot.cc,4000;Database=CAWSAnyWhereServer;uid=sa;pwd=*************" providerName="System.Data.SqlClient"/>
  </connectionStrings>
  <appSettings>

    <!--是否启用全局调试。默认为不启用-->
    <add key="NewLife.Debug" value="true"/>
    <!--是否启用调试，默认不启用。输出所有执行的SQL语句-->
    <add key="XCode.Debug" value="true"/>
    <!--跟踪SQL执行时间，大于该阀值将输出日志，默认0毫秒不跟踪。-->
    <add key="XCode.TraceSQLTime" value="100"/>
    <!--是否启用缓存调试，默认不启用-->
    <!--<add key="XCode.Cache.Debug" value="false" />-->
    <!--是否独占数据库，独占时将大大加大缓存权重，默认true（Debug时为false）-->
    <add key="XCode.Cache.Alone" value="false"/>
    <!--缓存有效期。-2  关闭缓存；-1  非独占数据库，请求级缓存；0  永久静态缓存；>0  静态缓存时间，单位秒；默认-2。-->
    <!--<add key="XCode.Cache.Expiration" value="-2" />-->
    <!--是否输出SQL语句，默认为XCode调试开关XCode.Debug-->
    <add key="XCode.ShowSQL" value="true"/>
    <!--设置SQL输出的单独目录，默认为空，SQL输出到当前日志中。生产环境建议输出到站点外单独的SqlLog目录-->
    <add key="XCode.SQLPath" value="../Sql"/>
    <!--是否启用反向工程，默认不启用。反向工程可以实现通过实体类反向更新数据库结构-->
    <add key="XCode.Negative.Enable" value="true"/>
    <!--是否只检查不操作，默认不启用。启用时，仅把更新SQL写入日志-->
    <add key="XCode.Negative.CheckOnly" value="false"/>
    <!--是否启用不删除字段，默认不启用。删除字段的操作过于危险，这里可以通过设为true关闭-->
    <add key="XCode.Negative.NoDelete" value="false"/>
    <!--要排除的链接名和表名，多个用逗号分隔，默认空。-->
    <add key="XCode.Negative.Exclude" value=""/>
    <!--连接名映射，把实体类中的Test2和Test3连接名映射到Test去-->
    <!--<add key="XCode.ConnMaps" value="Membership#Common_MSSQL" />-->
    <!--是否缓存数据库驱动Zip包到系统盘。默认不缓存-->
    <add key="XCode.CacheZip" value="true"/>

    <!--服务组件配置-->
    <!--工作线程间隔，单位：秒。不同工作线程的时间间隔用逗号或分号隔开。可以通过设置任务的时间间隔小于0来关闭指定任务-->
    <add key="XAgent.Interval" value="3"/>
    <!--最大活动时间，单位：秒。超过最大活动时间都还没有响应的线程将会被重启，防止线程执行时间过长。默认0秒，表示无限-->
    <add key="XAgent.MaxActive" value="0"/>
    <!--最大占用内存，单位： M。超过最大占用时，整个服务进程将会重启，以释放资源。默认0秒，表示无限-->
    <add key="XAgent.MaxMemory" value="0"/>
    <!--最大总线程数，单位：个。超过最大占用时，整个服务进程将会重启，以释放资源。默认0个，表示无限-->
    <add key="XAgent.MaxThread" value="0"/>
    <!--自动重启时间，单位：分。到达自动重启时间时，整个服务进程将会重启，以释放资源。默认0分，表示无限-->
    <add key="XAgent.AutoRestart" value="60"/>
    <!--服务名-->
    <add key="XAgent.ServiceName" value="AhnqIot.WeatherStationDataProcess"/>
    <!--显示名-->
    <add key="XAgent.DisplayName" value="安徽省农业气象物联网后台服务"/>
    <!--服务描述-->
    <add key="XAgent.Description" value="农田小气候仪数据同步"/>
    <!--看门狗，保护其它服务，每分钟检查一次。多个服务名逗号分隔-->
    <add key="XAgent.WatchLog" value=""/>
    <!--附加代理服务。任何XAgent服务程序都可以附加代理实现了IServer接口的服务，多个服务类用相同前缀的多个设置项-->
    <add key="XAgent.AttachServer.名称" value=""/>
    <!--附加代理服务配置。-->
    <add key="XAgent.名称.DomainName" value=""/>
    <add key="ClientSettingsProvider.ServiceUri" value=""/>
  </appSettings>
<startup><supportedRuntime version="v4.0" sku=".NETFramework,Version=v4.5"/></startup></configuration>
