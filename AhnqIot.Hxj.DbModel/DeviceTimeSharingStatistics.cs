//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:2.0.50727.8670
//     Support: http://www.cnblogs.com/huxj
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------


using System;
using System.Data;
using System.Data.Common;
using Dos.ORM;


namespace AhnqIot.Hxj.DbModel
{

	/// <summary>
	/// 实体类DeviceTimeSharingStatistics 。(属性说明自动提取数据库字段的描述信息)
	/// </summary>
	[Serializable]
	public class DeviceTimeSharingStatistics : Entity 
	{
		public DeviceTimeSharingStatistics():base("DeviceTimeSharingStatistics") {}

		#region Model
		private string _Serialnum;
		private DateTime _CreateTime;
		private string _CreateSysUserSerialnum;
		private DateTime _UpdateTime;
		private string _UpdateSysUserSerialnum;
		private string _DeviceSerialnum;
		private int _TimeSharing;
		private decimal _AvgValue;
		private decimal _StartValue;
		private decimal _EndValue;
		private decimal _MaxValue;
		private decimal _MinValue;
		private int _Count;
		private decimal _Max;
		private decimal _Min;
		private int _ExceptionCount;
		private int _Sort;
		private string _Remark;
		/// <summary>
		/// 编码
		/// </summary>
		public string Serialnum
		{
			get{ return _Serialnum; }
			set
			{
				this.OnPropertyValueChange(_.Serialnum,_Serialnum,value);
				this._Serialnum=value;
			}
		}
		/// <summary>
		/// 创建时间
		/// </summary>
		public DateTime CreateTime
		{
			get{ return _CreateTime; }
			set
			{
				this.OnPropertyValueChange(_.CreateTime,_CreateTime,value);
				this._CreateTime=value;
			}
		}
		/// <summary>
		/// 创建用户
		/// </summary>
		public string CreateSysUserSerialnum
		{
			get{ return _CreateSysUserSerialnum; }
			set
			{
				this.OnPropertyValueChange(_.CreateSysUserSerialnum,_CreateSysUserSerialnum,value);
				this._CreateSysUserSerialnum=value;
			}
		}
		/// <summary>
		/// 更新时间
		/// </summary>
		public DateTime UpdateTime
		{
			get{ return _UpdateTime; }
			set
			{
				this.OnPropertyValueChange(_.UpdateTime,_UpdateTime,value);
				this._UpdateTime=value;
			}
		}
		/// <summary>
		/// 更新用户
		/// </summary>
		public string UpdateSysUserSerialnum
		{
			get{ return _UpdateSysUserSerialnum; }
			set
			{
				this.OnPropertyValueChange(_.UpdateSysUserSerialnum,_UpdateSysUserSerialnum,value);
				this._UpdateSysUserSerialnum=value;
			}
		}
		/// <summary>
		/// 设施编码
		/// </summary>
		public string DeviceSerialnum
		{
			get{ return _DeviceSerialnum; }
			set
			{
				this.OnPropertyValueChange(_.DeviceSerialnum,_DeviceSerialnum,value);
				this._DeviceSerialnum=value;
			}
		}
		/// <summary>
		/// 分时时段
		/// </summary>
		public int TimeSharing
		{
			get{ return _TimeSharing; }
			set
			{
				this.OnPropertyValueChange(_.TimeSharing,_TimeSharing,value);
				this._TimeSharing=value;
			}
		}
		/// <summary>
		/// 平均
		/// </summary>
		public decimal AvgValue
		{
			get{ return _AvgValue; }
			set
			{
				this.OnPropertyValueChange(_.AvgValue,_AvgValue,value);
				this._AvgValue=value;
			}
		}
		/// <summary>
		/// 开始值
		/// </summary>
		public decimal StartValue
		{
			get{ return _StartValue; }
			set
			{
				this.OnPropertyValueChange(_.StartValue,_StartValue,value);
				this._StartValue=value;
			}
		}
		/// <summary>
		/// 结束值
		/// </summary>
		public decimal EndValue
		{
			get{ return _EndValue; }
			set
			{
				this.OnPropertyValueChange(_.EndValue,_EndValue,value);
				this._EndValue=value;
			}
		}
		/// <summary>
		/// 最大值
		/// </summary>
		public decimal MaxValue
		{
			get{ return _MaxValue; }
			set
			{
				this.OnPropertyValueChange(_.MaxValue,_MaxValue,value);
				this._MaxValue=value;
			}
		}
		/// <summary>
		/// 最小值
		/// </summary>
		public decimal MinValue
		{
			get{ return _MinValue; }
			set
			{
				this.OnPropertyValueChange(_.MinValue,_MinValue,value);
				this._MinValue=value;
			}
		}
		/// <summary>
		/// 样本数量
		/// </summary>
		public int Count
		{
			get{ return _Count; }
			set
			{
				this.OnPropertyValueChange(_.Count,_Count,value);
				this._Count=value;
			}
		}
		/// <summary>
		/// 上限
		/// </summary>
		public decimal Max
		{
			get{ return _Max; }
			set
			{
				this.OnPropertyValueChange(_.Max,_Max,value);
				this._Max=value;
			}
		}
		/// <summary>
		/// 下限
		/// </summary>
		public decimal Min
		{
			get{ return _Min; }
			set
			{
				this.OnPropertyValueChange(_.Min,_Min,value);
				this._Min=value;
			}
		}
		/// <summary>
		/// 异常次数
		/// </summary>
		public int ExceptionCount
		{
			get{ return _ExceptionCount; }
			set
			{
				this.OnPropertyValueChange(_.ExceptionCount,_ExceptionCount,value);
				this._ExceptionCount=value;
			}
		}
		/// <summary>
		/// 排序
		/// </summary>
		public int Sort
		{
			get{ return _Sort; }
			set
			{
				this.OnPropertyValueChange(_.Sort,_Sort,value);
				this._Sort=value;
			}
		}
		/// <summary>
		/// 备注
		/// </summary>
		public string Remark
		{
			get{ return _Remark; }
			set
			{
				this.OnPropertyValueChange(_.Remark,_Remark,value);
				this._Remark=value;
			}
		}
		#endregion

		#region Method
		/// <summary>
		/// 获取列信息
		/// </summary>
		public override Field[] GetFields()
		{
			return new Field[] {
				_.Serialnum,
				_.CreateTime,
				_.CreateSysUserSerialnum,
				_.UpdateTime,
				_.UpdateSysUserSerialnum,
				_.DeviceSerialnum,
				_.TimeSharing,
				_.AvgValue,
				_.StartValue,
				_.EndValue,
				_.MaxValue,
				_.MinValue,
				_.Count,
				_.Max,
				_.Min,
				_.ExceptionCount,
				_.Sort,
				_.Remark};
		}
		/// <summary>
		/// 获取值信息
		/// </summary>
		public override object[] GetValues()
		{
			return new object[] {
				this._Serialnum,
				this._CreateTime,
				this._CreateSysUserSerialnum,
				this._UpdateTime,
				this._UpdateSysUserSerialnum,
				this._DeviceSerialnum,
				this._TimeSharing,
				this._AvgValue,
				this._StartValue,
				this._EndValue,
				this._MaxValue,
				this._MinValue,
				this._Count,
				this._Max,
				this._Min,
				this._ExceptionCount,
				this._Sort,
				this._Remark};
		}
		/// <summary>
		/// 给当前实体赋值
		/// </summary>
		public override void SetPropertyValues(IDataReader reader)
		{
			this._Serialnum = DataUtils.ConvertValue<string>(reader["Serialnum"]);
			this._CreateTime = DataUtils.ConvertValue<DateTime>(reader["CreateTime"]);
			this._CreateSysUserSerialnum = DataUtils.ConvertValue<string>(reader["CreateSysUserSerialnum"]);
			this._UpdateTime = DataUtils.ConvertValue<DateTime>(reader["UpdateTime"]);
			this._UpdateSysUserSerialnum = DataUtils.ConvertValue<string>(reader["UpdateSysUserSerialnum"]);
			this._DeviceSerialnum = DataUtils.ConvertValue<string>(reader["DeviceSerialnum"]);
			this._TimeSharing = DataUtils.ConvertValue<int>(reader["TimeSharing"]);
			this._AvgValue = DataUtils.ConvertValue<decimal>(reader["AvgValue"]);
			this._StartValue = DataUtils.ConvertValue<decimal>(reader["StartValue"]);
			this._EndValue = DataUtils.ConvertValue<decimal>(reader["EndValue"]);
			this._MaxValue = DataUtils.ConvertValue<decimal>(reader["MaxValue"]);
			this._MinValue = DataUtils.ConvertValue<decimal>(reader["MinValue"]);
			this._Count = DataUtils.ConvertValue<int>(reader["Count"]);
			this._Max = DataUtils.ConvertValue<decimal>(reader["Max"]);
			this._Min = DataUtils.ConvertValue<decimal>(reader["Min"]);
			this._ExceptionCount = DataUtils.ConvertValue<int>(reader["ExceptionCount"]);
			this._Sort = DataUtils.ConvertValue<int>(reader["Sort"]);
			this._Remark = DataUtils.ConvertValue<string>(reader["Remark"]);
		}
		/// <summary>
		/// 给当前实体赋值
		/// </summary>
		public override void SetPropertyValues(DataRow row)
		{
			this._Serialnum = DataUtils.ConvertValue<string>(row["Serialnum"]);
			this._CreateTime = DataUtils.ConvertValue<DateTime>(row["CreateTime"]);
			this._CreateSysUserSerialnum = DataUtils.ConvertValue<string>(row["CreateSysUserSerialnum"]);
			this._UpdateTime = DataUtils.ConvertValue<DateTime>(row["UpdateTime"]);
			this._UpdateSysUserSerialnum = DataUtils.ConvertValue<string>(row["UpdateSysUserSerialnum"]);
			this._DeviceSerialnum = DataUtils.ConvertValue<string>(row["DeviceSerialnum"]);
			this._TimeSharing = DataUtils.ConvertValue<int>(row["TimeSharing"]);
			this._AvgValue = DataUtils.ConvertValue<decimal>(row["AvgValue"]);
			this._StartValue = DataUtils.ConvertValue<decimal>(row["StartValue"]);
			this._EndValue = DataUtils.ConvertValue<decimal>(row["EndValue"]);
			this._MaxValue = DataUtils.ConvertValue<decimal>(row["MaxValue"]);
			this._MinValue = DataUtils.ConvertValue<decimal>(row["MinValue"]);
			this._Count = DataUtils.ConvertValue<int>(row["Count"]);
			this._Max = DataUtils.ConvertValue<decimal>(row["Max"]);
			this._Min = DataUtils.ConvertValue<decimal>(row["Min"]);
			this._ExceptionCount = DataUtils.ConvertValue<int>(row["ExceptionCount"]);
			this._Sort = DataUtils.ConvertValue<int>(row["Sort"]);
			this._Remark = DataUtils.ConvertValue<string>(row["Remark"]);
		}
		#endregion

		#region _Field
		/// <summary>
		/// 字段信息
		/// </summary>
		public class _
		{
			/// <summary>
			/// * 
			/// </summary>
			public readonly static Field All = new Field("*","DeviceTimeSharingStatistics");
			/// <summary>
			/// 编码
			/// </summary>
			public readonly static Field Serialnum = new Field("Serialnum","DeviceTimeSharingStatistics","编码");
			/// <summary>
			/// 创建时间
			/// </summary>
			public readonly static Field CreateTime = new Field("CreateTime","DeviceTimeSharingStatistics","创建时间");
			/// <summary>
			/// 创建用户
			/// </summary>
			public readonly static Field CreateSysUserSerialnum = new Field("CreateSysUserSerialnum","DeviceTimeSharingStatistics","创建用户");
			/// <summary>
			/// 更新时间
			/// </summary>
			public readonly static Field UpdateTime = new Field("UpdateTime","DeviceTimeSharingStatistics","更新时间");
			/// <summary>
			/// 更新用户
			/// </summary>
			public readonly static Field UpdateSysUserSerialnum = new Field("UpdateSysUserSerialnum","DeviceTimeSharingStatistics","更新用户");
			/// <summary>
			/// 设施编码
			/// </summary>
			public readonly static Field DeviceSerialnum = new Field("DeviceSerialnum","DeviceTimeSharingStatistics","设施编码");
			/// <summary>
			/// 分时时段
			/// </summary>
			public readonly static Field TimeSharing = new Field("TimeSharing","DeviceTimeSharingStatistics","分时时段");
			/// <summary>
			/// 平均
			/// </summary>
			public readonly static Field AvgValue = new Field("AvgValue","DeviceTimeSharingStatistics","平均");
			/// <summary>
			/// 开始值
			/// </summary>
			public readonly static Field StartValue = new Field("StartValue","DeviceTimeSharingStatistics","开始值");
			/// <summary>
			/// 结束值
			/// </summary>
			public readonly static Field EndValue = new Field("EndValue","DeviceTimeSharingStatistics","结束值");
			/// <summary>
			/// 最大值
			/// </summary>
			public readonly static Field MaxValue = new Field("MaxValue","DeviceTimeSharingStatistics","最大值");
			/// <summary>
			/// 最小值
			/// </summary>
			public readonly static Field MinValue = new Field("MinValue","DeviceTimeSharingStatistics","最小值");
			/// <summary>
			/// 样本数量
			/// </summary>
			public readonly static Field Count = new Field("Count","DeviceTimeSharingStatistics","样本数量");
			/// <summary>
			/// 上限
			/// </summary>
			public readonly static Field Max = new Field("Max","DeviceTimeSharingStatistics","上限");
			/// <summary>
			/// 下限
			/// </summary>
			public readonly static Field Min = new Field("Min","DeviceTimeSharingStatistics","下限");
			/// <summary>
			/// 异常次数
			/// </summary>
			public readonly static Field ExceptionCount = new Field("ExceptionCount","DeviceTimeSharingStatistics","异常次数");
			/// <summary>
			/// 排序
			/// </summary>
			public readonly static Field Sort = new Field("Sort","DeviceTimeSharingStatistics","排序");
			/// <summary>
			/// 备注
			/// </summary>
			public readonly static Field Remark = new Field("Remark","DeviceTimeSharingStatistics","备注");
		}
		#endregion


	}
}

