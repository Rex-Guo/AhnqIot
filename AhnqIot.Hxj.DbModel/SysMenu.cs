//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:2.0.50727.8670
//     Support: http://www.cnblogs.com/huxj
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------


using System;
using System.Data;
using System.Data.Common;
using Dos.ORM;


namespace AhnqIot.Hxj.DbModel
{

	/// <summary>
	/// 实体类SysMenu 。(属性说明自动提取数据库字段的描述信息)
	/// </summary>
	[Serializable]
	public class SysMenu : Entity 
	{
		public SysMenu():base("SysMenu") {}

		#region Model
		private string _Serialnum;
		private DateTime _CreateTime;
		private string _CreateSysUserSerialnum;
		private DateTime _UpdateTime;
		private string _UpdateSysUserSerialnum;
		private string _Name;
		private string _ParentSerialnum;
		private string _SysFunctionSerialnum;
		private string _Icon;
		private int _Sort;
		private int _Status;
		private bool _Visiable;
		private bool _Necessary;
		private string _Description;
		private string _Remark;
		/// <summary>
		/// 编码
		/// </summary>
		public string Serialnum
		{
			get{ return _Serialnum; }
			set
			{
				this.OnPropertyValueChange(_.Serialnum,_Serialnum,value);
				this._Serialnum=value;
			}
		}
		/// <summary>
		/// 创建时间
		/// </summary>
		public DateTime CreateTime
		{
			get{ return _CreateTime; }
			set
			{
				this.OnPropertyValueChange(_.CreateTime,_CreateTime,value);
				this._CreateTime=value;
			}
		}
		/// <summary>
		/// 创建用户
		/// </summary>
		public string CreateSysUserSerialnum
		{
			get{ return _CreateSysUserSerialnum; }
			set
			{
				this.OnPropertyValueChange(_.CreateSysUserSerialnum,_CreateSysUserSerialnum,value);
				this._CreateSysUserSerialnum=value;
			}
		}
		/// <summary>
		/// 更新时间
		/// </summary>
		public DateTime UpdateTime
		{
			get{ return _UpdateTime; }
			set
			{
				this.OnPropertyValueChange(_.UpdateTime,_UpdateTime,value);
				this._UpdateTime=value;
			}
		}
		/// <summary>
		/// 更新用户
		/// </summary>
		public string UpdateSysUserSerialnum
		{
			get{ return _UpdateSysUserSerialnum; }
			set
			{
				this.OnPropertyValueChange(_.UpdateSysUserSerialnum,_UpdateSysUserSerialnum,value);
				this._UpdateSysUserSerialnum=value;
			}
		}
		/// <summary>
		/// 导航名称
		/// </summary>
		public string Name
		{
			get{ return _Name; }
			set
			{
				this.OnPropertyValueChange(_.Name,_Name,value);
				this._Name=value;
			}
		}
		/// <summary>
		/// 上级
		/// </summary>
		public string ParentSerialnum
		{
			get{ return _ParentSerialnum; }
			set
			{
				this.OnPropertyValueChange(_.ParentSerialnum,_ParentSerialnum,value);
				this._ParentSerialnum=value;
			}
		}
		/// <summary>
		/// 权限子项。逗号分隔，每个权限子项名值竖线分隔
		/// </summary>
		public string SysFunctionSerialnum
		{
			get{ return _SysFunctionSerialnum; }
			set
			{
				this.OnPropertyValueChange(_.SysFunctionSerialnum,_SysFunctionSerialnum,value);
				this._SysFunctionSerialnum=value;
			}
		}
		/// <summary>
		/// 图标
		/// </summary>
		public string Icon
		{
			get{ return _Icon; }
			set
			{
				this.OnPropertyValueChange(_.Icon,_Icon,value);
				this._Icon=value;
			}
		}
		/// <summary>
		/// 排序
		/// </summary>
		public int Sort
		{
			get{ return _Sort; }
			set
			{
				this.OnPropertyValueChange(_.Sort,_Sort,value);
				this._Sort=value;
			}
		}
		/// <summary>
		/// 状态。状态（1：启用，0：禁用，2...）
		/// </summary>
		public int Status
		{
			get{ return _Status; }
			set
			{
				this.OnPropertyValueChange(_.Status,_Status,value);
				this._Status=value;
			}
		}
		/// <summary>
		/// 是否可见
		/// </summary>
		public bool Visiable
		{
			get{ return _Visiable; }
			set
			{
				this.OnPropertyValueChange(_.Visiable,_Visiable,value);
				this._Visiable=value;
			}
		}
		/// <summary>
		/// 必要的菜单。必须至少有角色拥有这些权限，如果没有则自动授权给系统角色
		/// </summary>
		public bool Necessary
		{
			get{ return _Necessary; }
			set
			{
				this.OnPropertyValueChange(_.Necessary,_Necessary,value);
				this._Necessary=value;
			}
		}
		/// <summary>
		/// 显示名
		/// </summary>
		public string Description
		{
			get{ return _Description; }
			set
			{
				this.OnPropertyValueChange(_.Description,_Description,value);
				this._Description=value;
			}
		}
		/// <summary>
		/// 备注
		/// </summary>
		public string Remark
		{
			get{ return _Remark; }
			set
			{
				this.OnPropertyValueChange(_.Remark,_Remark,value);
				this._Remark=value;
			}
		}
		#endregion

		#region Method
		/// <summary>
		/// 获取实体中的主键列
		/// </summary>
		public override Field[] GetPrimaryKeyFields()
		{
			return new Field[] {
				_.Serialnum};
		}
		/// <summary>
		/// 获取列信息
		/// </summary>
		public override Field[] GetFields()
		{
			return new Field[] {
				_.Serialnum,
				_.CreateTime,
				_.CreateSysUserSerialnum,
				_.UpdateTime,
				_.UpdateSysUserSerialnum,
				_.Name,
				_.ParentSerialnum,
				_.SysFunctionSerialnum,
				_.Icon,
				_.Sort,
				_.Status,
				_.Visiable,
				_.Necessary,
				_.Description,
				_.Remark};
		}
		/// <summary>
		/// 获取值信息
		/// </summary>
		public override object[] GetValues()
		{
			return new object[] {
				this._Serialnum,
				this._CreateTime,
				this._CreateSysUserSerialnum,
				this._UpdateTime,
				this._UpdateSysUserSerialnum,
				this._Name,
				this._ParentSerialnum,
				this._SysFunctionSerialnum,
				this._Icon,
				this._Sort,
				this._Status,
				this._Visiable,
				this._Necessary,
				this._Description,
				this._Remark};
		}
		/// <summary>
		/// 给当前实体赋值
		/// </summary>
		public override void SetPropertyValues(IDataReader reader)
		{
			this._Serialnum = DataUtils.ConvertValue<string>(reader["Serialnum"]);
			this._CreateTime = DataUtils.ConvertValue<DateTime>(reader["CreateTime"]);
			this._CreateSysUserSerialnum = DataUtils.ConvertValue<string>(reader["CreateSysUserSerialnum"]);
			this._UpdateTime = DataUtils.ConvertValue<DateTime>(reader["UpdateTime"]);
			this._UpdateSysUserSerialnum = DataUtils.ConvertValue<string>(reader["UpdateSysUserSerialnum"]);
			this._Name = DataUtils.ConvertValue<string>(reader["Name"]);
			this._ParentSerialnum = DataUtils.ConvertValue<string>(reader["ParentSerialnum"]);
			this._SysFunctionSerialnum = DataUtils.ConvertValue<string>(reader["SysFunctionSerialnum"]);
			this._Icon = DataUtils.ConvertValue<string>(reader["Icon"]);
			this._Sort = DataUtils.ConvertValue<int>(reader["Sort"]);
			this._Status = DataUtils.ConvertValue<int>(reader["Status"]);
			this._Visiable = DataUtils.ConvertValue<bool>(reader["Visiable"]);
			this._Necessary = DataUtils.ConvertValue<bool>(reader["Necessary"]);
			this._Description = DataUtils.ConvertValue<string>(reader["Description"]);
			this._Remark = DataUtils.ConvertValue<string>(reader["Remark"]);
		}
		/// <summary>
		/// 给当前实体赋值
		/// </summary>
		public override void SetPropertyValues(DataRow row)
		{
			this._Serialnum = DataUtils.ConvertValue<string>(row["Serialnum"]);
			this._CreateTime = DataUtils.ConvertValue<DateTime>(row["CreateTime"]);
			this._CreateSysUserSerialnum = DataUtils.ConvertValue<string>(row["CreateSysUserSerialnum"]);
			this._UpdateTime = DataUtils.ConvertValue<DateTime>(row["UpdateTime"]);
			this._UpdateSysUserSerialnum = DataUtils.ConvertValue<string>(row["UpdateSysUserSerialnum"]);
			this._Name = DataUtils.ConvertValue<string>(row["Name"]);
			this._ParentSerialnum = DataUtils.ConvertValue<string>(row["ParentSerialnum"]);
			this._SysFunctionSerialnum = DataUtils.ConvertValue<string>(row["SysFunctionSerialnum"]);
			this._Icon = DataUtils.ConvertValue<string>(row["Icon"]);
			this._Sort = DataUtils.ConvertValue<int>(row["Sort"]);
			this._Status = DataUtils.ConvertValue<int>(row["Status"]);
			this._Visiable = DataUtils.ConvertValue<bool>(row["Visiable"]);
			this._Necessary = DataUtils.ConvertValue<bool>(row["Necessary"]);
			this._Description = DataUtils.ConvertValue<string>(row["Description"]);
			this._Remark = DataUtils.ConvertValue<string>(row["Remark"]);
		}
		#endregion

		#region _Field
		/// <summary>
		/// 字段信息
		/// </summary>
		public class _
		{
			/// <summary>
			/// * 
			/// </summary>
			public readonly static Field All = new Field("*","SysMenu");
			/// <summary>
			/// 编码
			/// </summary>
			public readonly static Field Serialnum = new Field("Serialnum","SysMenu","编码");
			/// <summary>
			/// 创建时间
			/// </summary>
			public readonly static Field CreateTime = new Field("CreateTime","SysMenu","创建时间");
			/// <summary>
			/// 创建用户
			/// </summary>
			public readonly static Field CreateSysUserSerialnum = new Field("CreateSysUserSerialnum","SysMenu","创建用户");
			/// <summary>
			/// 更新时间
			/// </summary>
			public readonly static Field UpdateTime = new Field("UpdateTime","SysMenu","更新时间");
			/// <summary>
			/// 更新用户
			/// </summary>
			public readonly static Field UpdateSysUserSerialnum = new Field("UpdateSysUserSerialnum","SysMenu","更新用户");
			/// <summary>
			/// 导航名称
			/// </summary>
			public readonly static Field Name = new Field("Name","SysMenu","导航名称");
			/// <summary>
			/// 上级
			/// </summary>
			public readonly static Field ParentSerialnum = new Field("ParentSerialnum","SysMenu","上级");
			/// <summary>
			/// 权限子项。逗号分隔，每个权限子项名值竖线分隔
			/// </summary>
			public readonly static Field SysFunctionSerialnum = new Field("SysFunctionSerialnum","SysMenu","权限子项。逗号分隔，每个权限子项名值竖线分隔");
			/// <summary>
			/// 图标
			/// </summary>
			public readonly static Field Icon = new Field("Icon","SysMenu","图标");
			/// <summary>
			/// 排序
			/// </summary>
			public readonly static Field Sort = new Field("Sort","SysMenu","排序");
			/// <summary>
			/// 状态。状态（1：启用，0：禁用，2...）
			/// </summary>
			public readonly static Field Status = new Field("Status","SysMenu","状态。状态（1：启用，0：禁用，2...）");
			/// <summary>
			/// 是否可见
			/// </summary>
			public readonly static Field Visiable = new Field("Visiable","SysMenu","是否可见");
			/// <summary>
			/// 必要的菜单。必须至少有角色拥有这些权限，如果没有则自动授权给系统角色
			/// </summary>
			public readonly static Field Necessary = new Field("Necessary","SysMenu","必要的菜单。必须至少有角色拥有这些权限，如果没有则自动授权给系统角色");
			/// <summary>
			/// 显示名
			/// </summary>
			public readonly static Field Description = new Field("Description","SysMenu","显示名");
			/// <summary>
			/// 备注
			/// </summary>
			public readonly static Field Remark = new Field("Remark","SysMenu","备注");
		}
		#endregion


	}
}

