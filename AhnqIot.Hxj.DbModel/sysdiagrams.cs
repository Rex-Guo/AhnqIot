//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:2.0.50727.8670
//     Support: http://www.cnblogs.com/huxj
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------


using System;
using System.Data;
using System.Data.Common;
using Dos.ORM;


namespace AhnqIot.Hxj.DbModel
{

	/// <summary>
	/// 实体类Sysdiagrams 。(属性说明自动提取数据库字段的描述信息)
	/// </summary>
	[Serializable]
	public class Sysdiagrams : Entity 
	{
		public Sysdiagrams():base("sysdiagrams") {}

		#region Model
		private object _Name;
		private int _Principal_id;
		private int _Diagram_id;
		private int? _Version;
		private byte[] _Definition;
		/// <summary>
		/// 
		/// </summary>
		public object Name
		{
			get{ return _Name; }
			set
			{
				this.OnPropertyValueChange(_.Name,_Name,value);
				this._Name=value;
			}
		}
		/// <summary>
		/// 
		/// </summary>
		public int Principal_id
		{
			get{ return _Principal_id; }
			set
			{
				this.OnPropertyValueChange(_.Principal_id,_Principal_id,value);
				this._Principal_id=value;
			}
		}
		/// <summary>
		/// 
		/// </summary>
		public int Diagram_id
		{
			get{ return _Diagram_id; }
			set
			{
				this.OnPropertyValueChange(_.Diagram_id,_Diagram_id,value);
				this._Diagram_id=value;
			}
		}
		/// <summary>
		/// 
		/// </summary>
		public int? Version
		{
			get{ return _Version; }
			set
			{
				this.OnPropertyValueChange(_.Version,_Version,value);
				this._Version=value;
			}
		}
		/// <summary>
		/// 
		/// </summary>
		public byte[] Definition
		{
			get{ return _Definition; }
			set
			{
				this.OnPropertyValueChange(_.Definition,_Definition,value);
				this._Definition=value;
			}
		}
		#endregion

		#region Method
		/// <summary>
		/// 获取实体中的标识列
		/// </summary>
		public override Field GetIdentityField()
		{
			return _.Diagram_id;
		}
		/// <summary>
		/// 获取实体中的主键列
		/// </summary>
		public override Field[] GetPrimaryKeyFields()
		{
			return new Field[] {
				_.Diagram_id};
		}
		/// <summary>
		/// 获取列信息
		/// </summary>
		public override Field[] GetFields()
		{
			return new Field[] {
				_.Name,
				_.Principal_id,
				_.Diagram_id,
				_.Version,
				_.Definition};
		}
		/// <summary>
		/// 获取值信息
		/// </summary>
		public override object[] GetValues()
		{
			return new object[] {
				this._Name,
				this._Principal_id,
				this._Diagram_id,
				this._Version,
				this._Definition};
		}
		/// <summary>
		/// 给当前实体赋值
		/// </summary>
		public override void SetPropertyValues(IDataReader reader)
		{
			this._Name = DataUtils.ConvertValue<object>(reader["name"]);
			this._Principal_id = DataUtils.ConvertValue<int>(reader["principal_id"]);
			this._Diagram_id = DataUtils.ConvertValue<int>(reader["diagram_id"]);
			this._Version = DataUtils.ConvertValue<int?>(reader["version"]);
			this._Definition = DataUtils.ConvertValue<byte[]>(reader["definition"]);
		}
		/// <summary>
		/// 给当前实体赋值
		/// </summary>
		public override void SetPropertyValues(DataRow row)
		{
			this._Name = DataUtils.ConvertValue<object>(row["name"]);
			this._Principal_id = DataUtils.ConvertValue<int>(row["principal_id"]);
			this._Diagram_id = DataUtils.ConvertValue<int>(row["diagram_id"]);
			this._Version = DataUtils.ConvertValue<int?>(row["version"]);
			this._Definition = DataUtils.ConvertValue<byte[]>(row["definition"]);
		}
		#endregion

		#region _Field
		/// <summary>
		/// 字段信息
		/// </summary>
		public class _
		{
			/// <summary>
			/// * 
			/// </summary>
			public readonly static Field All = new Field("*","sysdiagrams");
			/// <summary>
			/// 
			/// </summary>
			public readonly static Field Name = new Field("name","sysdiagrams","name");
			/// <summary>
			/// 
			/// </summary>
			public readonly static Field Principal_id = new Field("principal_id","sysdiagrams","principal_id");
			/// <summary>
			/// 
			/// </summary>
			public readonly static Field Diagram_id = new Field("diagram_id","sysdiagrams","diagram_id");
			/// <summary>
			/// 
			/// </summary>
			public readonly static Field Version = new Field("version","sysdiagrams","version");
			/// <summary>
			/// 
			/// </summary>
			public readonly static Field Definition = new Field("definition","sysdiagrams","definition");
		}
		#endregion


	}
}

