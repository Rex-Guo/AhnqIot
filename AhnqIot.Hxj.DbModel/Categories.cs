//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:2.0.50727.8670
//     Support: http://www.cnblogs.com/huxj
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------


using System;
using System.Data;
using System.Data.Common;
using Dos.ORM;


namespace AhnqIot.Hxj.DbModel
{

	/// <summary>
	/// 实体类Categories 。(属性说明自动提取数据库字段的描述信息)
	/// </summary>
	[Serializable]
	public class Categories : Entity 
	{
		public Categories():base("Categories") {}

		#region Model
		private int _CategoryID;
		private string _CategoryName;
		/// <summary>
		/// 
		/// </summary>
		public int CategoryID
		{
			get{ return _CategoryID; }
			set
			{
				this.OnPropertyValueChange(_.CategoryID,_CategoryID,value);
				this._CategoryID=value;
			}
		}
		/// <summary>
		/// 
		/// </summary>
		public string CategoryName
		{
			get{ return _CategoryName; }
			set
			{
				this.OnPropertyValueChange(_.CategoryName,_CategoryName,value);
				this._CategoryName=value;
			}
		}
		#endregion

		#region Method
		/// <summary>
		/// 获取实体中的标识列
		/// </summary>
		public override Field GetIdentityField()
		{
			return _.CategoryID;
		}
		/// <summary>
		/// 获取实体中的主键列
		/// </summary>
		public override Field[] GetPrimaryKeyFields()
		{
			return new Field[] {
				_.CategoryID};
		}
		/// <summary>
		/// 获取列信息
		/// </summary>
		public override Field[] GetFields()
		{
			return new Field[] {
				_.CategoryID,
				_.CategoryName};
		}
		/// <summary>
		/// 获取值信息
		/// </summary>
		public override object[] GetValues()
		{
			return new object[] {
				this._CategoryID,
				this._CategoryName};
		}
		/// <summary>
		/// 给当前实体赋值
		/// </summary>
		public override void SetPropertyValues(IDataReader reader)
		{
			this._CategoryID = DataUtils.ConvertValue<int>(reader["CategoryID"]);
			this._CategoryName = DataUtils.ConvertValue<string>(reader["CategoryName"]);
		}
		/// <summary>
		/// 给当前实体赋值
		/// </summary>
		public override void SetPropertyValues(DataRow row)
		{
			this._CategoryID = DataUtils.ConvertValue<int>(row["CategoryID"]);
			this._CategoryName = DataUtils.ConvertValue<string>(row["CategoryName"]);
		}
		#endregion

		#region _Field
		/// <summary>
		/// 字段信息
		/// </summary>
		public class _
		{
			/// <summary>
			/// * 
			/// </summary>
			public readonly static Field All = new Field("*","Categories");
			/// <summary>
			/// 
			/// </summary>
			public readonly static Field CategoryID = new Field("CategoryID","Categories","CategoryID");
			/// <summary>
			/// 
			/// </summary>
			public readonly static Field CategoryName = new Field("CategoryName","Categories","CategoryName");
		}
		#endregion


	}
}

