//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:2.0.50727.8670
//     Support: http://www.cnblogs.com/huxj
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------


using System;
using System.Data;
using System.Data.Common;
using Dos.ORM;


namespace AhnqIot.Hxj.DbModel
{

	/// <summary>
	/// 实体类Device 。(属性说明自动提取数据库字段的描述信息)
	/// </summary>
	[Serializable]
	public class Device : Entity 
	{
		public Device():base("Device") {}

		#region Model
		private string _Serialnum;
		private DateTime _CreateTime;
		private string _CreateSysUserSerialnum;
		private DateTime _UpdateTime;
		private string _UpdateSysUserSerialnum;
		private string _Name;
		private string _FacilitySerialnum;
		private string _DeviceTypeSerialnum;
		private string _PhotoUrl;
		private bool _OnlineStatus;
		private bool _IsException;
		private decimal? _ProcessedValue;
		private string _ShowValue;
		private string _Unit;
		private string _Location;
		private int _Status;
		private int _Sort;
		private string _Remark;
		private string _RelayType;
		/// <summary>
		/// 编码
		/// </summary>
		public string Serialnum
		{
			get{ return _Serialnum; }
			set
			{
				this.OnPropertyValueChange(_.Serialnum,_Serialnum,value);
				this._Serialnum=value;
			}
		}
		/// <summary>
		/// 创建时间
		/// </summary>
		public DateTime CreateTime
		{
			get{ return _CreateTime; }
			set
			{
				this.OnPropertyValueChange(_.CreateTime,_CreateTime,value);
				this._CreateTime=value;
			}
		}
		/// <summary>
		/// 创建用户
		/// </summary>
		public string CreateSysUserSerialnum
		{
			get{ return _CreateSysUserSerialnum; }
			set
			{
				this.OnPropertyValueChange(_.CreateSysUserSerialnum,_CreateSysUserSerialnum,value);
				this._CreateSysUserSerialnum=value;
			}
		}
		/// <summary>
		/// 更新时间
		/// </summary>
		public DateTime UpdateTime
		{
			get{ return _UpdateTime; }
			set
			{
				this.OnPropertyValueChange(_.UpdateTime,_UpdateTime,value);
				this._UpdateTime=value;
			}
		}
		/// <summary>
		/// 更新用户
		/// </summary>
		public string UpdateSysUserSerialnum
		{
			get{ return _UpdateSysUserSerialnum; }
			set
			{
				this.OnPropertyValueChange(_.UpdateSysUserSerialnum,_UpdateSysUserSerialnum,value);
				this._UpdateSysUserSerialnum=value;
			}
		}
		/// <summary>
		/// 名称
		/// </summary>
		public string Name
		{
			get{ return _Name; }
			set
			{
				this.OnPropertyValueChange(_.Name,_Name,value);
				this._Name=value;
			}
		}
		/// <summary>
		/// 设施编码
		/// </summary>
		public string FacilitySerialnum
		{
			get{ return _FacilitySerialnum; }
			set
			{
				this.OnPropertyValueChange(_.FacilitySerialnum,_FacilitySerialnum,value);
				this._FacilitySerialnum=value;
			}
		}
		/// <summary>
		/// 设备类型
		/// </summary>
		public string DeviceTypeSerialnum
		{
			get{ return _DeviceTypeSerialnum; }
			set
			{
				this.OnPropertyValueChange(_.DeviceTypeSerialnum,_DeviceTypeSerialnum,value);
				this._DeviceTypeSerialnum=value;
			}
		}
		/// <summary>
		/// 形象图片
		/// </summary>
		public string PhotoUrl
		{
			get{ return _PhotoUrl; }
			set
			{
				this.OnPropertyValueChange(_.PhotoUrl,_PhotoUrl,value);
				this._PhotoUrl=value;
			}
		}
		/// <summary>
		/// 在线状态
		/// </summary>
		public bool OnlineStatus
		{
			get{ return _OnlineStatus; }
			set
			{
				this.OnPropertyValueChange(_.OnlineStatus,_OnlineStatus,value);
				this._OnlineStatus=value;
			}
		}
		/// <summary>
		/// 是否数据异常
		/// </summary>
		public bool IsException
		{
			get{ return _IsException; }
			set
			{
				this.OnPropertyValueChange(_.IsException,_IsException,value);
				this._IsException=value;
			}
		}
		/// <summary>
		/// 处理值
		/// </summary>
		public decimal? ProcessedValue
		{
			get{ return _ProcessedValue; }
			set
			{
				this.OnPropertyValueChange(_.ProcessedValue,_ProcessedValue,value);
				this._ProcessedValue=value;
			}
		}
		/// <summary>
		/// 显示值
		/// </summary>
		public string ShowValue
		{
			get{ return _ShowValue; }
			set
			{
				this.OnPropertyValueChange(_.ShowValue,_ShowValue,value);
				this._ShowValue=value;
			}
		}
		/// <summary>
		/// 单位
		/// </summary>
		public string Unit
		{
			get{ return _Unit; }
			set
			{
				this.OnPropertyValueChange(_.Unit,_Unit,value);
				this._Unit=value;
			}
		}
		/// <summary>
		/// 位置
		/// </summary>
		public string Location
		{
			get{ return _Location; }
			set
			{
				this.OnPropertyValueChange(_.Location,_Location,value);
				this._Location=value;
			}
		}
		/// <summary>
		/// 数据状态 -1 删除 0 禁用 1 正常
		/// </summary>
		public int Status
		{
			get{ return _Status; }
			set
			{
				this.OnPropertyValueChange(_.Status,_Status,value);
				this._Status=value;
			}
		}
		/// <summary>
		/// 排序
		/// </summary>
		public int Sort
		{
			get{ return _Sort; }
			set
			{
				this.OnPropertyValueChange(_.Sort,_Sort,value);
				this._Sort=value;
			}
		}
		/// <summary>
		/// 备注
		/// </summary>
		public string Remark
		{
			get{ return _Remark; }
			set
			{
				this.OnPropertyValueChange(_.Remark,_Remark,value);
				this._Remark=value;
			}
		}
		/// <summary>
		/// 
		/// </summary>
		public string RelayType
		{
			get{ return _RelayType; }
			set
			{
				this.OnPropertyValueChange(_.RelayType,_RelayType,value);
				this._RelayType=value;
			}
		}
		#endregion

		#region Method
		/// <summary>
		/// 获取实体中的主键列
		/// </summary>
		public override Field[] GetPrimaryKeyFields()
		{
			return new Field[] {
				_.Serialnum};
		}
		/// <summary>
		/// 获取列信息
		/// </summary>
		public override Field[] GetFields()
		{
			return new Field[] {
				_.Serialnum,
				_.CreateTime,
				_.CreateSysUserSerialnum,
				_.UpdateTime,
				_.UpdateSysUserSerialnum,
				_.Name,
				_.FacilitySerialnum,
				_.DeviceTypeSerialnum,
				_.PhotoUrl,
				_.OnlineStatus,
				_.IsException,
				_.ProcessedValue,
				_.ShowValue,
				_.Unit,
				_.Location,
				_.Status,
				_.Sort,
				_.Remark,
				_.RelayType};
		}
		/// <summary>
		/// 获取值信息
		/// </summary>
		public override object[] GetValues()
		{
			return new object[] {
				this._Serialnum,
				this._CreateTime,
				this._CreateSysUserSerialnum,
				this._UpdateTime,
				this._UpdateSysUserSerialnum,
				this._Name,
				this._FacilitySerialnum,
				this._DeviceTypeSerialnum,
				this._PhotoUrl,
				this._OnlineStatus,
				this._IsException,
				this._ProcessedValue,
				this._ShowValue,
				this._Unit,
				this._Location,
				this._Status,
				this._Sort,
				this._Remark,
				this._RelayType};
		}
		/// <summary>
		/// 给当前实体赋值
		/// </summary>
		public override void SetPropertyValues(IDataReader reader)
		{
			this._Serialnum = DataUtils.ConvertValue<string>(reader["Serialnum"]);
			this._CreateTime = DataUtils.ConvertValue<DateTime>(reader["CreateTime"]);
			this._CreateSysUserSerialnum = DataUtils.ConvertValue<string>(reader["CreateSysUserSerialnum"]);
			this._UpdateTime = DataUtils.ConvertValue<DateTime>(reader["UpdateTime"]);
			this._UpdateSysUserSerialnum = DataUtils.ConvertValue<string>(reader["UpdateSysUserSerialnum"]);
			this._Name = DataUtils.ConvertValue<string>(reader["Name"]);
			this._FacilitySerialnum = DataUtils.ConvertValue<string>(reader["FacilitySerialnum"]);
			this._DeviceTypeSerialnum = DataUtils.ConvertValue<string>(reader["DeviceTypeSerialnum"]);
			this._PhotoUrl = DataUtils.ConvertValue<string>(reader["PhotoUrl"]);
			this._OnlineStatus = DataUtils.ConvertValue<bool>(reader["OnlineStatus"]);
			this._IsException = DataUtils.ConvertValue<bool>(reader["IsException"]);
			this._ProcessedValue = DataUtils.ConvertValue<decimal?>(reader["ProcessedValue"]);
			this._ShowValue = DataUtils.ConvertValue<string>(reader["ShowValue"]);
			this._Unit = DataUtils.ConvertValue<string>(reader["Unit"]);
			this._Location = DataUtils.ConvertValue<string>(reader["Location"]);
			this._Status = DataUtils.ConvertValue<int>(reader["Status"]);
			this._Sort = DataUtils.ConvertValue<int>(reader["Sort"]);
			this._Remark = DataUtils.ConvertValue<string>(reader["Remark"]);
			this._RelayType = DataUtils.ConvertValue<string>(reader["RelayType"]);
		}
		/// <summary>
		/// 给当前实体赋值
		/// </summary>
		public override void SetPropertyValues(DataRow row)
		{
			this._Serialnum = DataUtils.ConvertValue<string>(row["Serialnum"]);
			this._CreateTime = DataUtils.ConvertValue<DateTime>(row["CreateTime"]);
			this._CreateSysUserSerialnum = DataUtils.ConvertValue<string>(row["CreateSysUserSerialnum"]);
			this._UpdateTime = DataUtils.ConvertValue<DateTime>(row["UpdateTime"]);
			this._UpdateSysUserSerialnum = DataUtils.ConvertValue<string>(row["UpdateSysUserSerialnum"]);
			this._Name = DataUtils.ConvertValue<string>(row["Name"]);
			this._FacilitySerialnum = DataUtils.ConvertValue<string>(row["FacilitySerialnum"]);
			this._DeviceTypeSerialnum = DataUtils.ConvertValue<string>(row["DeviceTypeSerialnum"]);
			this._PhotoUrl = DataUtils.ConvertValue<string>(row["PhotoUrl"]);
			this._OnlineStatus = DataUtils.ConvertValue<bool>(row["OnlineStatus"]);
			this._IsException = DataUtils.ConvertValue<bool>(row["IsException"]);
			this._ProcessedValue = DataUtils.ConvertValue<decimal?>(row["ProcessedValue"]);
			this._ShowValue = DataUtils.ConvertValue<string>(row["ShowValue"]);
			this._Unit = DataUtils.ConvertValue<string>(row["Unit"]);
			this._Location = DataUtils.ConvertValue<string>(row["Location"]);
			this._Status = DataUtils.ConvertValue<int>(row["Status"]);
			this._Sort = DataUtils.ConvertValue<int>(row["Sort"]);
			this._Remark = DataUtils.ConvertValue<string>(row["Remark"]);
			this._RelayType = DataUtils.ConvertValue<string>(row["RelayType"]);
		}
		#endregion

		#region _Field
		/// <summary>
		/// 字段信息
		/// </summary>
		public class _
		{
			/// <summary>
			/// * 
			/// </summary>
			public readonly static Field All = new Field("*","Device");
			/// <summary>
			/// 编码
			/// </summary>
			public readonly static Field Serialnum = new Field("Serialnum","Device","编码");
			/// <summary>
			/// 创建时间
			/// </summary>
			public readonly static Field CreateTime = new Field("CreateTime","Device","创建时间");
			/// <summary>
			/// 创建用户
			/// </summary>
			public readonly static Field CreateSysUserSerialnum = new Field("CreateSysUserSerialnum","Device","创建用户");
			/// <summary>
			/// 更新时间
			/// </summary>
			public readonly static Field UpdateTime = new Field("UpdateTime","Device","更新时间");
			/// <summary>
			/// 更新用户
			/// </summary>
			public readonly static Field UpdateSysUserSerialnum = new Field("UpdateSysUserSerialnum","Device","更新用户");
			/// <summary>
			/// 名称
			/// </summary>
			public readonly static Field Name = new Field("Name","Device","名称");
			/// <summary>
			/// 设施编码
			/// </summary>
			public readonly static Field FacilitySerialnum = new Field("FacilitySerialnum","Device","设施编码");
			/// <summary>
			/// 设备类型
			/// </summary>
			public readonly static Field DeviceTypeSerialnum = new Field("DeviceTypeSerialnum","Device","设备类型");
			/// <summary>
			/// 形象图片
			/// </summary>
			public readonly static Field PhotoUrl = new Field("PhotoUrl","Device","形象图片");
			/// <summary>
			/// 在线状态
			/// </summary>
			public readonly static Field OnlineStatus = new Field("OnlineStatus","Device","在线状态");
			/// <summary>
			/// 是否数据异常
			/// </summary>
			public readonly static Field IsException = new Field("IsException","Device","是否数据异常");
			/// <summary>
			/// 处理值
			/// </summary>
			public readonly static Field ProcessedValue = new Field("ProcessedValue","Device","处理值");
			/// <summary>
			/// 显示值
			/// </summary>
			public readonly static Field ShowValue = new Field("ShowValue","Device","显示值");
			/// <summary>
			/// 单位
			/// </summary>
			public readonly static Field Unit = new Field("Unit","Device","单位");
			/// <summary>
			/// 位置
			/// </summary>
			public readonly static Field Location = new Field("Location","Device","位置");
			/// <summary>
			/// 数据状态 -1 删除 0 禁用 1 正常
			/// </summary>
			public readonly static Field Status = new Field("Status","Device","数据状态 -1 删除 0 禁用 1 正常");
			/// <summary>
			/// 排序
			/// </summary>
			public readonly static Field Sort = new Field("Sort","Device","排序");
			/// <summary>
			/// 备注
			/// </summary>
			public readonly static Field Remark = new Field("Remark","Device","备注");
			/// <summary>
			/// 
			/// </summary>
			public readonly static Field RelayType = new Field("RelayType","Device","RelayType");
		}
		#endregion


	}
}

