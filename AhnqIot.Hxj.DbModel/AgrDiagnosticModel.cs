//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:2.0.50727.8670
//     Support: http://www.cnblogs.com/huxj
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------


using System;
using System.Data;
using System.Data.Common;
using Dos.ORM;


namespace AhnqIot.Hxj.DbModel
{

	/// <summary>
	/// 实体类AgrDiagnosticModel 。(属性说明自动提取数据库字段的描述信息)
	/// </summary>
	[Serializable]
	public class AgrDiagnosticModel : Entity 
	{
		public AgrDiagnosticModel():base("AgrDiagnosticModel") {}

		#region Model
		private string _Serialnum;
		private DateTime _CreateTime;
		private string _CreateSysUserSerialnum;
		private DateTime _UpdateTime;
		private string _UpdateSysUserSerialnum;
		private string _Name;
		private string _AgrProductObjectGrowthInfoSerialnum;
		private string _DeviceTypeSerialnum;
		private decimal _MaxValue;
		private decimal _MinValue;
		private string _DisplayColor;
		private string _Effect;
		private string _Advise;
		private bool _IsNotice;
		private string _TipInfo;
		private int _Sort;
		private string _Remark;
		/// <summary>
		/// 编码
		/// </summary>
		public string Serialnum
		{
			get{ return _Serialnum; }
			set
			{
				this.OnPropertyValueChange(_.Serialnum,_Serialnum,value);
				this._Serialnum=value;
			}
		}
		/// <summary>
		/// 创建时间
		/// </summary>
		public DateTime CreateTime
		{
			get{ return _CreateTime; }
			set
			{
				this.OnPropertyValueChange(_.CreateTime,_CreateTime,value);
				this._CreateTime=value;
			}
		}
		/// <summary>
		/// 创建用户
		/// </summary>
		public string CreateSysUserSerialnum
		{
			get{ return _CreateSysUserSerialnum; }
			set
			{
				this.OnPropertyValueChange(_.CreateSysUserSerialnum,_CreateSysUserSerialnum,value);
				this._CreateSysUserSerialnum=value;
			}
		}
		/// <summary>
		/// 更新时间
		/// </summary>
		public DateTime UpdateTime
		{
			get{ return _UpdateTime; }
			set
			{
				this.OnPropertyValueChange(_.UpdateTime,_UpdateTime,value);
				this._UpdateTime=value;
			}
		}
		/// <summary>
		/// 更新用户
		/// </summary>
		public string UpdateSysUserSerialnum
		{
			get{ return _UpdateSysUserSerialnum; }
			set
			{
				this.OnPropertyValueChange(_.UpdateSysUserSerialnum,_UpdateSysUserSerialnum,value);
				this._UpdateSysUserSerialnum=value;
			}
		}
		/// <summary>
		/// 等级
		/// </summary>
		public string Name
		{
			get{ return _Name; }
			set
			{
				this.OnPropertyValueChange(_.Name,_Name,value);
				this._Name=value;
			}
		}
		/// <summary>
		/// 品种生长周期
		/// </summary>
		public string AgrProductObjectGrowthInfoSerialnum
		{
			get{ return _AgrProductObjectGrowthInfoSerialnum; }
			set
			{
				this.OnPropertyValueChange(_.AgrProductObjectGrowthInfoSerialnum,_AgrProductObjectGrowthInfoSerialnum,value);
				this._AgrProductObjectGrowthInfoSerialnum=value;
			}
		}
		/// <summary>
		/// 参数类型
		/// </summary>
		public string DeviceTypeSerialnum
		{
			get{ return _DeviceTypeSerialnum; }
			set
			{
				this.OnPropertyValueChange(_.DeviceTypeSerialnum,_DeviceTypeSerialnum,value);
				this._DeviceTypeSerialnum=value;
			}
		}
		/// <summary>
		/// 上限
		/// </summary>
		public decimal MaxValue
		{
			get{ return _MaxValue; }
			set
			{
				this.OnPropertyValueChange(_.MaxValue,_MaxValue,value);
				this._MaxValue=value;
			}
		}
		/// <summary>
		/// 下限
		/// </summary>
		public decimal MinValue
		{
			get{ return _MinValue; }
			set
			{
				this.OnPropertyValueChange(_.MinValue,_MinValue,value);
				this._MinValue=value;
			}
		}
		/// <summary>
		/// 显示颜色（16进制）
		/// </summary>
		public string DisplayColor
		{
			get{ return _DisplayColor; }
			set
			{
				this.OnPropertyValueChange(_.DisplayColor,_DisplayColor,value);
				this._DisplayColor=value;
			}
		}
		/// <summary>
		/// 影响
		/// </summary>
		public string Effect
		{
			get{ return _Effect; }
			set
			{
				this.OnPropertyValueChange(_.Effect,_Effect,value);
				this._Effect=value;
			}
		}
		/// <summary>
		/// 建议
		/// </summary>
		public string Advise
		{
			get{ return _Advise; }
			set
			{
				this.OnPropertyValueChange(_.Advise,_Advise,value);
				this._Advise=value;
			}
		}
		/// <summary>
		/// 是否通知
		/// </summary>
		public bool IsNotice
		{
			get{ return _IsNotice; }
			set
			{
				this.OnPropertyValueChange(_.IsNotice,_IsNotice,value);
				this._IsNotice=value;
			}
		}
		/// <summary>
		/// 内容
		/// </summary>
		public string TipInfo
		{
			get{ return _TipInfo; }
			set
			{
				this.OnPropertyValueChange(_.TipInfo,_TipInfo,value);
				this._TipInfo=value;
			}
		}
		/// <summary>
		/// 排序
		/// </summary>
		public int Sort
		{
			get{ return _Sort; }
			set
			{
				this.OnPropertyValueChange(_.Sort,_Sort,value);
				this._Sort=value;
			}
		}
		/// <summary>
		/// 备注
		/// </summary>
		public string Remark
		{
			get{ return _Remark; }
			set
			{
				this.OnPropertyValueChange(_.Remark,_Remark,value);
				this._Remark=value;
			}
		}
		#endregion

		#region Method
		/// <summary>
		/// 获取实体中的主键列
		/// </summary>
		public override Field[] GetPrimaryKeyFields()
		{
			return new Field[] {
				_.Serialnum};
		}
		/// <summary>
		/// 获取列信息
		/// </summary>
		public override Field[] GetFields()
		{
			return new Field[] {
				_.Serialnum,
				_.CreateTime,
				_.CreateSysUserSerialnum,
				_.UpdateTime,
				_.UpdateSysUserSerialnum,
				_.Name,
				_.AgrProductObjectGrowthInfoSerialnum,
				_.DeviceTypeSerialnum,
				_.MaxValue,
				_.MinValue,
				_.DisplayColor,
				_.Effect,
				_.Advise,
				_.IsNotice,
				_.TipInfo,
				_.Sort,
				_.Remark};
		}
		/// <summary>
		/// 获取值信息
		/// </summary>
		public override object[] GetValues()
		{
			return new object[] {
				this._Serialnum,
				this._CreateTime,
				this._CreateSysUserSerialnum,
				this._UpdateTime,
				this._UpdateSysUserSerialnum,
				this._Name,
				this._AgrProductObjectGrowthInfoSerialnum,
				this._DeviceTypeSerialnum,
				this._MaxValue,
				this._MinValue,
				this._DisplayColor,
				this._Effect,
				this._Advise,
				this._IsNotice,
				this._TipInfo,
				this._Sort,
				this._Remark};
		}
		/// <summary>
		/// 给当前实体赋值
		/// </summary>
		public override void SetPropertyValues(IDataReader reader)
		{
			this._Serialnum = DataUtils.ConvertValue<string>(reader["Serialnum"]);
			this._CreateTime = DataUtils.ConvertValue<DateTime>(reader["CreateTime"]);
			this._CreateSysUserSerialnum = DataUtils.ConvertValue<string>(reader["CreateSysUserSerialnum"]);
			this._UpdateTime = DataUtils.ConvertValue<DateTime>(reader["UpdateTime"]);
			this._UpdateSysUserSerialnum = DataUtils.ConvertValue<string>(reader["UpdateSysUserSerialnum"]);
			this._Name = DataUtils.ConvertValue<string>(reader["Name"]);
			this._AgrProductObjectGrowthInfoSerialnum = DataUtils.ConvertValue<string>(reader["AgrProductObjectGrowthInfoSerialnum"]);
			this._DeviceTypeSerialnum = DataUtils.ConvertValue<string>(reader["DeviceTypeSerialnum"]);
			this._MaxValue = DataUtils.ConvertValue<decimal>(reader["MaxValue"]);
			this._MinValue = DataUtils.ConvertValue<decimal>(reader["MinValue"]);
			this._DisplayColor = DataUtils.ConvertValue<string>(reader["DisplayColor"]);
			this._Effect = DataUtils.ConvertValue<string>(reader["Effect"]);
			this._Advise = DataUtils.ConvertValue<string>(reader["Advise"]);
			this._IsNotice = DataUtils.ConvertValue<bool>(reader["IsNotice"]);
			this._TipInfo = DataUtils.ConvertValue<string>(reader["TipInfo"]);
			this._Sort = DataUtils.ConvertValue<int>(reader["Sort"]);
			this._Remark = DataUtils.ConvertValue<string>(reader["Remark"]);
		}
		/// <summary>
		/// 给当前实体赋值
		/// </summary>
		public override void SetPropertyValues(DataRow row)
		{
			this._Serialnum = DataUtils.ConvertValue<string>(row["Serialnum"]);
			this._CreateTime = DataUtils.ConvertValue<DateTime>(row["CreateTime"]);
			this._CreateSysUserSerialnum = DataUtils.ConvertValue<string>(row["CreateSysUserSerialnum"]);
			this._UpdateTime = DataUtils.ConvertValue<DateTime>(row["UpdateTime"]);
			this._UpdateSysUserSerialnum = DataUtils.ConvertValue<string>(row["UpdateSysUserSerialnum"]);
			this._Name = DataUtils.ConvertValue<string>(row["Name"]);
			this._AgrProductObjectGrowthInfoSerialnum = DataUtils.ConvertValue<string>(row["AgrProductObjectGrowthInfoSerialnum"]);
			this._DeviceTypeSerialnum = DataUtils.ConvertValue<string>(row["DeviceTypeSerialnum"]);
			this._MaxValue = DataUtils.ConvertValue<decimal>(row["MaxValue"]);
			this._MinValue = DataUtils.ConvertValue<decimal>(row["MinValue"]);
			this._DisplayColor = DataUtils.ConvertValue<string>(row["DisplayColor"]);
			this._Effect = DataUtils.ConvertValue<string>(row["Effect"]);
			this._Advise = DataUtils.ConvertValue<string>(row["Advise"]);
			this._IsNotice = DataUtils.ConvertValue<bool>(row["IsNotice"]);
			this._TipInfo = DataUtils.ConvertValue<string>(row["TipInfo"]);
			this._Sort = DataUtils.ConvertValue<int>(row["Sort"]);
			this._Remark = DataUtils.ConvertValue<string>(row["Remark"]);
		}
		#endregion

		#region _Field
		/// <summary>
		/// 字段信息
		/// </summary>
		public class _
		{
			/// <summary>
			/// * 
			/// </summary>
			public readonly static Field All = new Field("*","AgrDiagnosticModel");
			/// <summary>
			/// 编码
			/// </summary>
			public readonly static Field Serialnum = new Field("Serialnum","AgrDiagnosticModel","编码");
			/// <summary>
			/// 创建时间
			/// </summary>
			public readonly static Field CreateTime = new Field("CreateTime","AgrDiagnosticModel","创建时间");
			/// <summary>
			/// 创建用户
			/// </summary>
			public readonly static Field CreateSysUserSerialnum = new Field("CreateSysUserSerialnum","AgrDiagnosticModel","创建用户");
			/// <summary>
			/// 更新时间
			/// </summary>
			public readonly static Field UpdateTime = new Field("UpdateTime","AgrDiagnosticModel","更新时间");
			/// <summary>
			/// 更新用户
			/// </summary>
			public readonly static Field UpdateSysUserSerialnum = new Field("UpdateSysUserSerialnum","AgrDiagnosticModel","更新用户");
			/// <summary>
			/// 等级
			/// </summary>
			public readonly static Field Name = new Field("Name","AgrDiagnosticModel","等级");
			/// <summary>
			/// 品种生长周期
			/// </summary>
			public readonly static Field AgrProductObjectGrowthInfoSerialnum = new Field("AgrProductObjectGrowthInfoSerialnum","AgrDiagnosticModel","品种生长周期");
			/// <summary>
			/// 参数类型
			/// </summary>
			public readonly static Field DeviceTypeSerialnum = new Field("DeviceTypeSerialnum","AgrDiagnosticModel","参数类型");
			/// <summary>
			/// 上限
			/// </summary>
			public readonly static Field MaxValue = new Field("MaxValue","AgrDiagnosticModel","上限");
			/// <summary>
			/// 下限
			/// </summary>
			public readonly static Field MinValue = new Field("MinValue","AgrDiagnosticModel","下限");
			/// <summary>
			/// 显示颜色（16进制）
			/// </summary>
			public readonly static Field DisplayColor = new Field("DisplayColor","AgrDiagnosticModel","显示颜色（16进制）");
			/// <summary>
			/// 影响
			/// </summary>
			public readonly static Field Effect = new Field("Effect","AgrDiagnosticModel","影响");
			/// <summary>
			/// 建议
			/// </summary>
			public readonly static Field Advise = new Field("Advise","AgrDiagnosticModel","建议");
			/// <summary>
			/// 是否通知
			/// </summary>
			public readonly static Field IsNotice = new Field("IsNotice","AgrDiagnosticModel","是否通知");
			/// <summary>
			/// 内容
			/// </summary>
			public readonly static Field TipInfo = new Field("TipInfo","AgrDiagnosticModel","内容");
			/// <summary>
			/// 排序
			/// </summary>
			public readonly static Field Sort = new Field("Sort","AgrDiagnosticModel","排序");
			/// <summary>
			/// 备注
			/// </summary>
			public readonly static Field Remark = new Field("Remark","AgrDiagnosticModel","备注");
		}
		#endregion


	}
}

