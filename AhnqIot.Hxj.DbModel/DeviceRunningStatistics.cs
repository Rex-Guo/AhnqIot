//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:2.0.50727.8670
//     Support: http://www.cnblogs.com/huxj
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------


using System;
using System.Data;
using System.Data.Common;
using Dos.ORM;


namespace AhnqIot.Hxj.DbModel
{

	/// <summary>
	/// 实体类DeviceRunningStatistics 。(属性说明自动提取数据库字段的描述信息)
	/// </summary>
	[Serializable]
	public class DeviceRunningStatistics : Entity 
	{
		public DeviceRunningStatistics():base("DeviceRunningStatistics") {}

		#region Model
		private string _Serialnum;
		private DateTime _CreateTime;
		private string _CreateSysUserSerialnum;
		private DateTime _UpdateTime;
		private string _UpdateSysUserSerialnum;
		private string _DeviceSerialnum;
		private int _Year;
		private int _Month;
		private int _Day;
		private int _AllCount;
		private int _ReceiveCount;
		private decimal _ReceivePercent;
		private int _DataExceptionCount;
		private decimal _DataExceptionPercent;
		private int _Sort;
		private string _Remark;
		/// <summary>
		/// 编码
		/// </summary>
		public string Serialnum
		{
			get{ return _Serialnum; }
			set
			{
				this.OnPropertyValueChange(_.Serialnum,_Serialnum,value);
				this._Serialnum=value;
			}
		}
		/// <summary>
		/// 创建时间
		/// </summary>
		public DateTime CreateTime
		{
			get{ return _CreateTime; }
			set
			{
				this.OnPropertyValueChange(_.CreateTime,_CreateTime,value);
				this._CreateTime=value;
			}
		}
		/// <summary>
		/// 创建用户
		/// </summary>
		public string CreateSysUserSerialnum
		{
			get{ return _CreateSysUserSerialnum; }
			set
			{
				this.OnPropertyValueChange(_.CreateSysUserSerialnum,_CreateSysUserSerialnum,value);
				this._CreateSysUserSerialnum=value;
			}
		}
		/// <summary>
		/// 更新时间
		/// </summary>
		public DateTime UpdateTime
		{
			get{ return _UpdateTime; }
			set
			{
				this.OnPropertyValueChange(_.UpdateTime,_UpdateTime,value);
				this._UpdateTime=value;
			}
		}
		/// <summary>
		/// 更新用户
		/// </summary>
		public string UpdateSysUserSerialnum
		{
			get{ return _UpdateSysUserSerialnum; }
			set
			{
				this.OnPropertyValueChange(_.UpdateSysUserSerialnum,_UpdateSysUserSerialnum,value);
				this._UpdateSysUserSerialnum=value;
			}
		}
		/// <summary>
		/// 基地
		/// </summary>
		public string DeviceSerialnum
		{
			get{ return _DeviceSerialnum; }
			set
			{
				this.OnPropertyValueChange(_.DeviceSerialnum,_DeviceSerialnum,value);
				this._DeviceSerialnum=value;
			}
		}
		/// <summary>
		/// 年
		/// </summary>
		public int Year
		{
			get{ return _Year; }
			set
			{
				this.OnPropertyValueChange(_.Year,_Year,value);
				this._Year=value;
			}
		}
		/// <summary>
		/// 月
		/// </summary>
		public int Month
		{
			get{ return _Month; }
			set
			{
				this.OnPropertyValueChange(_.Month,_Month,value);
				this._Month=value;
			}
		}
		/// <summary>
		/// 天
		/// </summary>
		public int Day
		{
			get{ return _Day; }
			set
			{
				this.OnPropertyValueChange(_.Day,_Day,value);
				this._Day=value;
			}
		}
		/// <summary>
		/// 总次数
		/// </summary>
		public int AllCount
		{
			get{ return _AllCount; }
			set
			{
				this.OnPropertyValueChange(_.AllCount,_AllCount,value);
				this._AllCount=value;
			}
		}
		/// <summary>
		/// 实收次数
		/// </summary>
		public int ReceiveCount
		{
			get{ return _ReceiveCount; }
			set
			{
				this.OnPropertyValueChange(_.ReceiveCount,_ReceiveCount,value);
				this._ReceiveCount=value;
			}
		}
		/// <summary>
		/// 到报率
		/// </summary>
		public decimal ReceivePercent
		{
			get{ return _ReceivePercent; }
			set
			{
				this.OnPropertyValueChange(_.ReceivePercent,_ReceivePercent,value);
				this._ReceivePercent=value;
			}
		}
		/// <summary>
		/// 异常次数
		/// </summary>
		public int DataExceptionCount
		{
			get{ return _DataExceptionCount; }
			set
			{
				this.OnPropertyValueChange(_.DataExceptionCount,_DataExceptionCount,value);
				this._DataExceptionCount=value;
			}
		}
		/// <summary>
		/// 异常率
		/// </summary>
		public decimal DataExceptionPercent
		{
			get{ return _DataExceptionPercent; }
			set
			{
				this.OnPropertyValueChange(_.DataExceptionPercent,_DataExceptionPercent,value);
				this._DataExceptionPercent=value;
			}
		}
		/// <summary>
		/// 排序
		/// </summary>
		public int Sort
		{
			get{ return _Sort; }
			set
			{
				this.OnPropertyValueChange(_.Sort,_Sort,value);
				this._Sort=value;
			}
		}
		/// <summary>
		/// 备注
		/// </summary>
		public string Remark
		{
			get{ return _Remark; }
			set
			{
				this.OnPropertyValueChange(_.Remark,_Remark,value);
				this._Remark=value;
			}
		}
		#endregion

		#region Method
		/// <summary>
		/// 获取实体中的主键列
		/// </summary>
		public override Field[] GetPrimaryKeyFields()
		{
			return new Field[] {
				_.Serialnum};
		}
		/// <summary>
		/// 获取列信息
		/// </summary>
		public override Field[] GetFields()
		{
			return new Field[] {
				_.Serialnum,
				_.CreateTime,
				_.CreateSysUserSerialnum,
				_.UpdateTime,
				_.UpdateSysUserSerialnum,
				_.DeviceSerialnum,
				_.Year,
				_.Month,
				_.Day,
				_.AllCount,
				_.ReceiveCount,
				_.ReceivePercent,
				_.DataExceptionCount,
				_.DataExceptionPercent,
				_.Sort,
				_.Remark};
		}
		/// <summary>
		/// 获取值信息
		/// </summary>
		public override object[] GetValues()
		{
			return new object[] {
				this._Serialnum,
				this._CreateTime,
				this._CreateSysUserSerialnum,
				this._UpdateTime,
				this._UpdateSysUserSerialnum,
				this._DeviceSerialnum,
				this._Year,
				this._Month,
				this._Day,
				this._AllCount,
				this._ReceiveCount,
				this._ReceivePercent,
				this._DataExceptionCount,
				this._DataExceptionPercent,
				this._Sort,
				this._Remark};
		}
		/// <summary>
		/// 给当前实体赋值
		/// </summary>
		public override void SetPropertyValues(IDataReader reader)
		{
			this._Serialnum = DataUtils.ConvertValue<string>(reader["Serialnum"]);
			this._CreateTime = DataUtils.ConvertValue<DateTime>(reader["CreateTime"]);
			this._CreateSysUserSerialnum = DataUtils.ConvertValue<string>(reader["CreateSysUserSerialnum"]);
			this._UpdateTime = DataUtils.ConvertValue<DateTime>(reader["UpdateTime"]);
			this._UpdateSysUserSerialnum = DataUtils.ConvertValue<string>(reader["UpdateSysUserSerialnum"]);
			this._DeviceSerialnum = DataUtils.ConvertValue<string>(reader["DeviceSerialnum"]);
			this._Year = DataUtils.ConvertValue<int>(reader["Year"]);
			this._Month = DataUtils.ConvertValue<int>(reader["Month"]);
			this._Day = DataUtils.ConvertValue<int>(reader["Day"]);
			this._AllCount = DataUtils.ConvertValue<int>(reader["AllCount"]);
			this._ReceiveCount = DataUtils.ConvertValue<int>(reader["ReceiveCount"]);
			this._ReceivePercent = DataUtils.ConvertValue<decimal>(reader["ReceivePercent"]);
			this._DataExceptionCount = DataUtils.ConvertValue<int>(reader["DataExceptionCount"]);
			this._DataExceptionPercent = DataUtils.ConvertValue<decimal>(reader["DataExceptionPercent"]);
			this._Sort = DataUtils.ConvertValue<int>(reader["Sort"]);
			this._Remark = DataUtils.ConvertValue<string>(reader["Remark"]);
		}
		/// <summary>
		/// 给当前实体赋值
		/// </summary>
		public override void SetPropertyValues(DataRow row)
		{
			this._Serialnum = DataUtils.ConvertValue<string>(row["Serialnum"]);
			this._CreateTime = DataUtils.ConvertValue<DateTime>(row["CreateTime"]);
			this._CreateSysUserSerialnum = DataUtils.ConvertValue<string>(row["CreateSysUserSerialnum"]);
			this._UpdateTime = DataUtils.ConvertValue<DateTime>(row["UpdateTime"]);
			this._UpdateSysUserSerialnum = DataUtils.ConvertValue<string>(row["UpdateSysUserSerialnum"]);
			this._DeviceSerialnum = DataUtils.ConvertValue<string>(row["DeviceSerialnum"]);
			this._Year = DataUtils.ConvertValue<int>(row["Year"]);
			this._Month = DataUtils.ConvertValue<int>(row["Month"]);
			this._Day = DataUtils.ConvertValue<int>(row["Day"]);
			this._AllCount = DataUtils.ConvertValue<int>(row["AllCount"]);
			this._ReceiveCount = DataUtils.ConvertValue<int>(row["ReceiveCount"]);
			this._ReceivePercent = DataUtils.ConvertValue<decimal>(row["ReceivePercent"]);
			this._DataExceptionCount = DataUtils.ConvertValue<int>(row["DataExceptionCount"]);
			this._DataExceptionPercent = DataUtils.ConvertValue<decimal>(row["DataExceptionPercent"]);
			this._Sort = DataUtils.ConvertValue<int>(row["Sort"]);
			this._Remark = DataUtils.ConvertValue<string>(row["Remark"]);
		}
		#endregion

		#region _Field
		/// <summary>
		/// 字段信息
		/// </summary>
		public class _
		{
			/// <summary>
			/// * 
			/// </summary>
			public readonly static Field All = new Field("*","DeviceRunningStatistics");
			/// <summary>
			/// 编码
			/// </summary>
			public readonly static Field Serialnum = new Field("Serialnum","DeviceRunningStatistics","编码");
			/// <summary>
			/// 创建时间
			/// </summary>
			public readonly static Field CreateTime = new Field("CreateTime","DeviceRunningStatistics","创建时间");
			/// <summary>
			/// 创建用户
			/// </summary>
			public readonly static Field CreateSysUserSerialnum = new Field("CreateSysUserSerialnum","DeviceRunningStatistics","创建用户");
			/// <summary>
			/// 更新时间
			/// </summary>
			public readonly static Field UpdateTime = new Field("UpdateTime","DeviceRunningStatistics","更新时间");
			/// <summary>
			/// 更新用户
			/// </summary>
			public readonly static Field UpdateSysUserSerialnum = new Field("UpdateSysUserSerialnum","DeviceRunningStatistics","更新用户");
			/// <summary>
			/// 基地
			/// </summary>
			public readonly static Field DeviceSerialnum = new Field("DeviceSerialnum","DeviceRunningStatistics","基地");
			/// <summary>
			/// 年
			/// </summary>
			public readonly static Field Year = new Field("Year","DeviceRunningStatistics","年");
			/// <summary>
			/// 月
			/// </summary>
			public readonly static Field Month = new Field("Month","DeviceRunningStatistics","月");
			/// <summary>
			/// 天
			/// </summary>
			public readonly static Field Day = new Field("Day","DeviceRunningStatistics","天");
			/// <summary>
			/// 总次数
			/// </summary>
			public readonly static Field AllCount = new Field("AllCount","DeviceRunningStatistics","总次数");
			/// <summary>
			/// 实收次数
			/// </summary>
			public readonly static Field ReceiveCount = new Field("ReceiveCount","DeviceRunningStatistics","实收次数");
			/// <summary>
			/// 到报率
			/// </summary>
			public readonly static Field ReceivePercent = new Field("ReceivePercent","DeviceRunningStatistics","到报率");
			/// <summary>
			/// 异常次数
			/// </summary>
			public readonly static Field DataExceptionCount = new Field("DataExceptionCount","DeviceRunningStatistics","异常次数");
			/// <summary>
			/// 异常率
			/// </summary>
			public readonly static Field DataExceptionPercent = new Field("DataExceptionPercent","DeviceRunningStatistics","异常率");
			/// <summary>
			/// 排序
			/// </summary>
			public readonly static Field Sort = new Field("Sort","DeviceRunningStatistics","排序");
			/// <summary>
			/// 备注
			/// </summary>
			public readonly static Field Remark = new Field("Remark","DeviceRunningStatistics","备注");
		}
		#endregion


	}
}

